- name: Initialize persistence directories and files
  tags: docker
  block:

  #--- Traefik
  - name: Create Traefik persistence directory
    file:
      path: '{{ server_home }}/services/traefik/persistence'
      state: directory
      owner: docker
      group: docker
      mode: 0744

  - name: Create traefik log files
    file:
      path: '{{ item }}'
      state: touch
      owner: docker
      group: docker
      mode: 0640
    loop:
      - '{{ server_home }}/services/traefik/persistence/access.log'
      - '{{ server_home }}/services/traefik/persistence/traefik.log'

  #--- Traefik - Testing
  - name: Traefik Testing - Copy Traefik configuration file
    when: local_domain
    copy:
      src: '{{ server_home }}/services/traefik/config_local/traefik.toml'
      dest: '{{ server_home }}/services/traefik/persistence/traefik.toml'
      owner: docker
      group: docker
      mode: 0640

  #--- Traefik - Production
  - name: Traefik Production
    when: not local_domain
    block:

    - name: Create traefik certificates file
      file:
        path: '{{ server_home }}/services/traefik/persistence/acme.json'
        state: touch
        owner: docker
        group: docker
        mode: 0600

    - name: Copy Traefik configuration file
      copy:
        src: '{{ server_home }}/services/traefik/config/traefik.toml'
        dest: '{{ server_home }}/services/traefik/persistence/traefik.toml'
        owner: docker
        group: docker
        mode: 0640

    - name: Add email to traefik.toml
      lineinfile:
        path: '{{ server_home }}/services/traefik/persistence/traefik.toml'
        state: present
        search_string: 'email ='
        line: '  email = "{{ user_email }}"'

    - name: Create traefik users.txt file
      file:
        path: '{{ server_home }}/services/traefik/persistence/users.txt'
        state: touch
        owner: docker
        group: docker
        mode: 0640

    - name: Add a user to users.txt
      community.general.htpasswd:
        path: '{{ server_home }}/services/traefik/persistence/users.txt'
        name: '{{ traefik_user }}'
        password: '{{ traefik_password }}'
        hash_scheme: md5_crypt
        state: present

  #--- Production Services
  - name: Production - Uncomment labels and bind mounts in compose.yaml for all services
    when: not local_domain
    replace:
      path: '{{ item }}'
      regexp: '(^\s*)# -'
      replace: '\1-'
    loop:
      - '{{ server_home }}/services/traefik/compose.yaml'
      - '{{ server_home }}/services/guacamole/compose.yaml'
      - '{{ server_home }}/services/pihole/compose.yaml'
      - '{{ server_home }}/services/grafana/compose.yaml'
      - '{{ server_home }}/services/ntfy/compose.yaml'
      - '{{ server_home }}/services/limesurvey/compose.yaml'
      - '{{ server_home }}/services/bitwarden/compose.yaml'
      - '{{ server_home }}/services/nextcloud/compose.yaml'
      - '{{ server_home }}/services/photoprism/compose.yaml'
      - '{{ server_home }}/services/jellyfin/compose.yaml'
      - '{{ server_home }}/services/grocy/compose.yaml'

  #--- WireGuard
  - name: Create WireGuard persistence directories
    file:
      path: '{{ server_home }}/services/wireguard/persistence'
      state: directory
      owner: docker
      group: docker
      mode: 0744

  #--- Guacamole
  - name: Create Guacamole persistence directories
    file:
      path: '{{ item }}'
      state: directory
      owner: docker
      group: docker
      mode: 0744
      loop:
        - '{{ server_home }}/services/guacamole/db-persistence'
        - '{{ server_home }}/services/guacamole/guacd-persistence'
        - '{{ server_home }}/services/guacamole/guacd-persistence/drive'
        - '{{ server_home }}/services/guacamole/guacd-persistence/record'

  - name: Make initdb.sql script executable
    file:
      path: '{{ server_home }}/services/guacamole/config/initdb.sql'
      state: file
      owner: docker
      group: docker
      mode: 0777

  #--- Pihole
  - name: Create Pihole directories
    file:
      path: '{{ item }}'
      state: directory
      owner: docker
      group: docker
      mode: 0744
    loop:
      - '{{ server_home }}/services/pihole/etc-pihole'
      - '{{ server_home }}/services/pihole/etc-dnsmasqd'

  - name: Create Pihole log file
    file:
      path: '{{ server_home }}/services/pihole/pihole.log'
      state: touch
      owner: docker
      group: docker
      mode: 0640

  #--- Grafana
  - name: Create Grafana persistence directories
    file:
      path: '{{ item }}'
      state: directory
      owner: docker
      group: docker
      mode: 0744
    loop:
      - '{{ server_home }}/services/grafana/persistence'
      - '{{ server_home }}/services/grafana/influxdb-persistence'

  #--- Ntfy
  - name: Create Ntfy persistence directories
    file:
      path: '{{ item }}'
      state: directory
      owner: docker
      group: docker
      mode: 0744
    loop:
      - '{{ server_home }}/services/ntfy/persistence'
      - '{{ server_home }}/services/ntfy/persistence/cache'
      - '{{ server_home }}/services/ntfy/persistence/etc'
      - '{{ server_home }}/services/ntfy/persistence/log'

  - name: Copy Ntfy server configuration file
    copy:
      src: '{{ server_home }}/services/ntfy/config/server.yml'
      dest: '{{ server_home }}/services/traefik/persistence/etc/server.yml'
      owner: docker
      group: docker
      mode: 0640

  - name: Create ntfy users.txt file
    file:
      path: '{{ server_home }}/services/traefik/persistence/nfty.txt'
      state: touch
      owner: docker
      group: docker
      mode: 0640

  - name: Add a user to users.txt
    community.general.htpasswd:
      path: '{{ server_home }}/services/traefik/persistence/ntfy.txt'
      name: '{{ ntfy_user }}'
      password: '{{ ntfy_password }}'
      hash_scheme: md5_crypt
      state: present

  #--- Limesurvey
  - name: Create Limesurvey persistence directories
    file:
      path: '{{ item }}'
      state: directory
      owner: docker
      group: docker
      mode: 0744
    loop:
      - '{{ server_home }}/services/limesurvey/persistence'
      - '{{ server_home }}/services/limesurvey/persistence/plugins'
      - '{{ server_home }}/services/limesurvey/persistence/upload'
      - '{{ server_home }}/services/limesurvey/persistence/config'
      - '{{ server_home }}/services/limesurvey/db-persistence'

  #--- Bitwarden
  - name: Create Bitwarden persistence directories
    file:
      path: '{{ item }}'
      state: directory
      owner: docker
      group: docker
      mode: 0744
    loop:
      - '{{ server_home }}/services/bitwarden/persistence'
      - '{{ server_home }}/services/bitwarden/db-persistence'

  #--- Nextcloud
  - name: Create Nextcloud persistence directories
    file:
      path: '{{ item }}'
      state: directory
      owner: docker
      group: docker
      mode: 0744
    loop:
      - '{{ server_home }}/services/nextcloud/persistence'
      - '{{ server_home }}/services/nextcloud/db-persistence'
      - '{{ server_home }}/services/nextcloud/web-persistence'

  #--- Photoprism
  - name: Create Photoprism persistence directories
    file:
      path: '{{ item }}'
      state: directory
      owner: docker
      group: docker
      mode: 0744
    loop:
     - '{{ server_home }}/services/photoprism/persistence'
     - '{{ server_home }}/services/photoprism/db-persistence'
     - '{{ server_home }}/services/photoprism/persistence/pictures'
     - '{{ server_home }}/services/photoprism/persistence/storage'

  #--- Jellyfin
  - name: Create Jellyfin persistence directories
    file:
      path: '{{ item }}'
      state: directory
      owner: docker
      group: docker
      mode: 0744
    loop:
     - '{{ server_home }}/services/jellyfin/persistence'
     - '{{ server_home }}/services/jellyfin/persistence/library'
     - '{{ server_home }}/services/jellyfin/persistence/tvshows'
     - '{{ server_home }}/services/jellyfin/persistence/movies'

  #--- Grocy
  - name: Create Grocy persistence directory
    file:
      path: '{{ server_home }}/services/grocy/persistence'
      state: directory
      owner: docker
      group: docker
      mode: 0744

  #--- Minecraft
  - name: Create Minecraft persistence directory
    file:
      path: '{{ server_home }}/services/minecraft/persistence'
      state: directory
      owner: docker
      group: docker
      mode: 0744
