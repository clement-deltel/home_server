services:
  db:
    container_name: directus-postgres
    env_file: config/.env.db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DIRECTUS_POSTGRES_USER}"]
      interval: 20s
      timeout: 15s
      retries: 3
      start_period: 60s
      start_interval: 5s
    hostname: directus-postgres
    image: ${DEFAULT_POSTGRES_IMAGE}
    logging:
      driver: json-file
      options:
        max-file: 2
        max-size: 5m
    networks:
      app-net:
        ipv4_address: ${DIRECTUS_DB_IP}
    restart: unless-stopped
    stop_grace_period: 30s
    volumes:
      - ./db-persistence:/var/lib/postgresql/data

  redis:
    command: redis-server --requirepass ${DIRECTUS_REDIS_PASSWORD}
    container_name: directus-redis
    healthcheck:
      test: ["CMD-SHELL", "redis-cli --raw INCR PING"]
      interval: 20s
      timeout: 15s
      retries: 3
      start_period: 60s
      start_interval: 5s
    hostname: directus-redis
    image: ${DEFAULT_REDIS_IMAGE}
    logging:
      driver: json-file
      options:
        max-file: 2
        max-size: 2m
    networks:
      app-net:
        ipv4_address: ${DIRECTUS_REDIS_IP}
    restart: unless-stopped
    stop_grace_period: 30s

  directus:
    container_name: directus
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    dns:
      - 127.0.0.1
      - 45.90.28.96
      - 45.90.30.96
    env_file: config/.env
    hostname: directus
    image: ${DIRECTUS_IMAGE}
    labels:
      - "traefik.enable=true"
      # Routers
      - "traefik.http.routers.directus.rule=Host(`directus.${DOMAIN}`)"
      - "traefik.http.routers.directus.tls=true"
      # - "traefik.http.routers.directus.tls.certresolver=letsencrypt"
      # - "traefik.http.routers.directus.tls.domains[0].main=directus.${DOMAIN}"
      - "traefik.http.routers.directus.service=directus"
      # Services
      - "traefik.http.services.directus.loadbalancer.server.port=8055"
    logging:
      driver: json-file
      options:
        max-file: 5
        max-size: 10m
    networks:
      app-net:
        ipv4_address: ${DIRECTUS_INTERNAL_IP}
      traefik-net:
        ipv4_address: ${DIRECTUS_IP}
    ports:
      - 8055
    restart: unless-stopped
    stop_grace_period: 30s
    volumes:
      - ./persistence/uploads:/directus/uploads
      - ./persistence/extensions:/directus/extensions

networks:
  app-net:
    name: directus-internal
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${DIRECTUS_NET}
          gateway: ${DIRECTUS_GATEWAY}
  traefik-net:
    external: true
    name: traefik-net
