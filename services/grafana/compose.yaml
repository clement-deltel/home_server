services:
  influxdb:
    container_name: grafana-influxdb
    env_file: config/.env.influxdb
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8086/ping"]
      interval: 20s
      timeout: 15s
      retries: 3
      start_period: 60s
      start_interval: 5s
    hostname: grafana-influxdb
    image: ${INFLUXDB_IMAGE}
    logging:
      driver: json-file
      options:
        max-file: 2
        max-size: 5m
    networks:
      monitoring-net:
        ipv4_address: ${INFLUXDB_IP}
    ports:
      - 8086:8086
    # Remote backups and restores
    #  - 8088:8088
      - 8089/udp
    restart: unless-stopped
    stop_grace_period: 30s
    volumes:
      - ./influxdb-persistence:/var/lib/influxdb

  renderer:
    container_name: grafana-image-renderer
    env_file: config/.env.renderer
    hostname: grafana-image-renderer
    image: ${GRAFANA_IMAGE_RENDERER_IMAGE}
    logging:
      driver: json-file
      options:
        max-file: 2
        max-size: 2m
    networks:
      monitoring-net:
        ipv4_address: ${GRAFANA_RENDERER_IP}
    restart: unless-stopped
    stop_grace_period: 30s

  db:
    container_name: grafana-mariadb
    env_file: config/.env.db
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -p${GRAFANA_DB_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5
    hostname: grafana-mariadb
    image: ${DEFAULT_DB_IMAGE}
    logging:
      driver: json-file
      options:
        max-file: 2
        max-size: 5m
    networks:
      app-net:
        ipv4_address: ${GRAFANA_DB_IP}
    restart: unless-stopped
    stop_grace_period: 30s
    volumes:
      - ./db-persistence:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro

  grafana:
    container_name: grafana
    depends_on:
      db:
        condition: service_healthy
      influxdb:
        condition: service_healthy
      renderer:
        condition: service_started
    dns:
      - 127.0.0.1
      - 45.90.28.96
      - 45.90.30.96
    env_file: config/.env
    hostname: grafana
    # Check the latest stable version available on Docker Hub before using it
    image: ${GRAFANA_IMAGE}
    labels:
      - "traefik.enable=true"
      # Routers
      - "traefik.http.routers.grafana.rule=Host(`grafana.${DOMAIN}`)"
      - "traefik.http.routers.grafana.tls=true"
      # - "traefik.http.routers.grafana.tls.certresolver=letsencrypt"
      # - "traefik.http.routers.grafana.tls.domains[0].main=grafana.${DOMAIN}"
      - "traefik.http.routers.grafana.service=grafana"
      # Services
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    logging:
      driver: json-file
      options:
        max-file: 5
        max-size: 10m
    networks:
      monitoring-net:
        ipv4_address: ${GRAFANA_MONITORING_IP}
      traefik-net:
        ipv4_address: ${GRAFANA_IP}
    ports:
      - 3000
    restart: unless-stopped
    stop_grace_period: 30s
    user: ${DOCKER_UID}:${DOCKER_GID}
    volumes:
      # database and plugins
      - ./persistence:/var/lib/grafana

networks:
  traefik-net:
    external: true
    name: traefik-net
  monitoring-net:
    external: true
    name: monitoring-net
