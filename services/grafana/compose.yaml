services:
  influxdb:
    container_name: grafana-influxdb
    env_file: config/.env.influxdb
    hostname: grafana-influxdb
    image: ${INFLUXDB_IMAGE}
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: 5m
    networks:
      app-net:
        ipv4_address: ${GRAFANA_DB_IP}
    ports:
      - 8086:8086
    # Remote backups and restores
    #  - 8088:8088
    restart: always
    stop_grace_period: 10s
    volumes:
      - ./influxdb-persistence:/var/lib/influxdb

  renderer:
    container_name: grafana-image-renderer
    env_file: config/.env.renderer
    hostname: grafana-image-renderer
    image: ${GRAFANA_IMAGE_RENDERER_IMAGE}
    logging:
      driver: json-file
      options:
        max-file: "2"
        max-size: 5m
    networks:
      app-net:
        ipv4_address: ${GRAFANA_RENDERER_IP}
    restart: always
    stop_grace_period: 10s

  grafana:
    container_name: grafana
    depends_on:
      - influxdb
      - renderer
    dns:
      - 127.0.0.1
      - 1.1.1.1
      - 1.0.0.1
    env_file: config/.env
    hostname: grafana
    # Check the latest stable version available on Docker Hub before using it
    image: ${GRAFANA_IMAGE}
    labels:
      - "traefik.enable=true"
      # Routers
      - "traefik.http.routers.grafana.rule=Host(`grafana.${DOMAIN}`)"
      - "traefik.http.routers.grafana.tls=true"
      # - "traefik.http.routers.grafana.tls.certresolver=letsencrypt"
      # - "traefik.http.routers.grafana.tls.domains[0].main=grafana.${DOMAIN}"
      - "traefik.http.routers.grafana.service=grafana"
      # Services
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: 10m
    networks:
      app-net:
        ipv4_address: ${GRAFANA_INTERNAL_IP}
      traefik-net:
        ipv4_address: ${GRAFANA_IP}
    ports:
      - 3000
    restart: always
    stop_grace_period: 10s
    user: ${DOCKER_UID}:${DOCKER_GID}
    volumes:
      # database and plugins
      - ./persistence:/var/lib/grafana

networks:
  app-net:
    name: grafana-internal
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${GRAFANA_NET}
          gateway: ${GRAFANA_GATEWAY}
  traefik-net:
    external: true
    name: traefik-net
