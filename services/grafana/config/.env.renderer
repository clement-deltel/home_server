#################### Image Renderer Configuration - Required Only ####################
# Official documentation: https://github.com/grafana/grafana-image-renderer/blob/master/docs/remote_rendering_using_docker.md

######################### Global #########################
# Change the listening host of the HTTP server. Default is unset and will use the local host.
HTTP_HOST=renderer
# Change the listening port of the HTTP server. Default is 8081. Setting 0 will automatically assign a port not in use.
HTTP_PORT=8081
# Instruct headless browser instance to use a default timezone when not provided by Grafana, .e.g. when rendering panel image of alert. Fallbacks to TZ environment variable if not set.
BROWSER_TZ=${TIMEZONE}
# Instruct headless browser instance whether to ignore HTTPS errors during navigation. Per default HTTPS errors is not ignored. Due to the security risk it's not recommended to ignore HTTPS errors.
IGNORE_HTTPS_ERRORS=false
# You can enable Prometheus metrics endpoint /metrics using the environment variable ENABLE_METRICS. Node.js and render request duration metrics are included, see output example for details.
ENABLE_METRICS=false
# Change the log level. Default is info and will include log messages with level error, warning and info.
LOG_LEVEL=info
# Instruct headless browser instance whether to capture and log verbose information when rendering an image. Default is false and will only capture and log error messages. When enabled (true) debug messages are captured and logged as well. Note that you need to change log level to debug, see above, for the verbose information to be included in the logs.
#RENDERING_VERBOSE_LOGGING="true"
# Instruct headless browser instance whether to output its debug and error messages into running process of remote rendering service. Default is false. This can be useful to enable (true) when troubleshooting.
#RENDERING_DUMPIO="true"

######################### Rendering Mode #########################
# You can instruct how headless browser instances are created by configuring a rendering mode (RENDERING_MODE). Default is default and will create a new browser instance on each request. Other supported values are clustered and reusable.
RENDERING_MODE=default
# When using clustered you can configure a clustering mode to define how many browser instances or incognito pages that can execute concurrently. Default is browser and will ensure a maximum amount of browser instances can execute concurrently. Mode context will ensure a maximum amount of incognito pages can execute concurrently. You can also configure the maximum concurrency allowed which per default is 5.
#RENDERING_MODE="clustered"
#RENDERING_CLUSTERING_MODE="default"
#RENDERING_CLUSTERING_MAX_CONCURRENCY="5"
# When using the rendering mode reusable one browser instance will be created and reused. A new incognito page will be opened on each request for. This mode is a bit experimental since if the browser instance crashes it will not automatically be restarted.
#RENDERING_MODE="reusable"
