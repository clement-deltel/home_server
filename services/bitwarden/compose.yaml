services:
  db:
    container_name: bitwarden-mariadb
    env_file: config/.env.db
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "root", "-p${BITWARDEN_DB_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5
    hostname: bitwarden-mariadb
    image: ${DEFAULT_DB_IMAGE}
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: 5m
    networks:
      app-net:
        ipv4_address: ${BITWARDEN_DB_IP}
    restart: always
    stop_grace_period: 10s
    volumes:
      # Permissions for this folder:
      - ./db-persistence:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro

  bitwarden:
    container_name: bitwarden
    depends_on:
      db:
        condition: service_healthy
    dns:
      - 127.0.0.1
      - 1.1.1.1
      - 1.0.0.1
    env_file: config/.env
    hostname: bitwarden
    image: ${BITWARDEN_IMAGE}
    labels:
      - "traefik.enable=true"
      # Bitwarden UI
      # Routers
      - "traefik.http.routers.bitwarden.rule=Host(`bitwarden.${DOMAIN}`)"
      - "traefik.http.routers.bitwarden.tls=true"
      # - "traefik.http.routers.bitwarden.tls.certresolver=letsencrypt"
      # - "traefik.http.routers.bitwarden.tls.domains[0].main=bitwarden.${DOMAIN}"
      - "traefik.http.routers.bitwarden.service=bitwarden"
      # Services
      - "traefik.http.services.bitwarden.loadbalancer.server.port=80"
    logging:
      driver: json-file
      options:
        max-file: "5"
        max-size: 10m
    networks:
      app-net:
        ipv4_address: ${BITWARDEN_INTERNAL_IP}
      traefik-net:
        ipv4_address: ${BITWARDEN_IP}
    ports:
      - 80
    restart: always
    stop_grace_period: 10s
    user: ${DOCKER_UID}:${DOCKER_GID}
    volumes:
      - ./persistence:/data

networks:
  app-net:
    name: bitwarden-internal
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${BITWARDEN_NET}
          gateway: ${BITWARDEN_GATEWAY}
  traefik-net:
    external: true
    name: traefik-net
