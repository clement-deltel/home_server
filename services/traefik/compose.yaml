services:
  reverse-proxy:
    container_name: traefik
    hostname: traefik
    image: ${TRAEFIK_IMAGE}
    labels:
      - "traefik.enable=true"
      # Routers
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.traefik.tls=true"
      # - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      # - "traefik.http.routers.traefik.tls.domains[0].main=traefik.${DOMAIN}"
      # - "traefik.http.routers.traefik.middlewares=auth"
      - "traefik.http.routers.traefik.service=api@internal"
      # Middlewares
      # - "traefik.http.middlewares.auth.basicauth.usersfile=/opt/dashboard/users.txt"
      # Services
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    logging:
      driver: json-file
      options:
        max-file: 5
        max-size: 10m
    networks:
      traefik-net:
        ipv4_address: ${TRAEFIK_IP}
      monitoring-net:
        ipv4_address: ${TRAEFIK_MONITORING_IP}
    ports:
      # Format for publishing ports is hostPort:containerPort
      - ${TRAEFIK_HTTP_PORT}:80
      - ${TRAEFIK_HTTPS_PORT}:443
      # Web UI / Dashboard
      - 8080
      # RustDesk
      - ${RUSTDESK_ID_NAT_TT_PORT}:21115/tcp # ID Server - NAT type test
      - ${RUSTDESK_ID_TCP_HP_PORT}:21116/tcp # ID Server - TCP hole punching
      - ${RUSTDESK_RELAY_PORT}:21117/tcp # Relay Server - Relay services
      # VPN
      - ${WIREGUARD_PORT}:51820/udp
    restart: unless-stopped
    stop_grace_period: 30s
    user: ${DOCKER_UID}:${DOCKER_GID}
    volumes:
      # Docker socket is mounted for auto-discovery of new services - read only
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Log files
      - ./persistence/access.log:/var/log/access.log
      - ./persistence/traefik.log:/var/log/traefik.log
      # Configuration file
      - ./persistence/traefik.toml:/etc/traefik/traefik.toml
      # users.txt - Credentials for the Traefik dashboard.
      # - ./persistence/users.txt:/opt/dashboard/users.txt
      # JSON file for certificates - It must have 600 file permissions.
      # - ./persistence/acme.json:/letsencrypt/acme.json

  robots:
    container_name: robots
    hostname: robots
    image: ${ROBOTS_IMAGE}
    labels:
      - "traefik.enable=true"
      # Routers
      - "traefik.http.routers.robots.rule=HostRegexp(`{host:.*}`) && Path(`/robots.txt`)"
      - "traefik.http.routers.robots.tls=true"
      - "traefik.http.routers.robots.priority=99"
    logging:
      driver: json-file
      options:
        max-file: 2
        max-size: 2m
    networks:
      traefik-net:
        ipv4_address: ${ROBOTS_IP}
    restart: unless-stopped
    stop_grace_period: 30s
    volumes:
      - ./config/robots.txt:/usr/share/nginx/html/robots.txt:ro

networks:
  traefik-net:
    external: true
    name: traefik-net
  monitoring-net:
    external: true
    name: monitoring-net
