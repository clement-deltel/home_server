services:
  db:
    command: --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW
    container_name: nextcloud-mariadb
    env_file: config/.env.db
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -p${NEXTCLOUD_DB_ROOT_PASSWORD}"]
      interval: 20s
      timeout: 15s
      retries: 3
      start_period: 60s
      start_interval: 5s
    hostname: nextcloud-mariadb
    image: ${DEFAULT_DB_IMAGE}
    logging:
      driver: json-file
      options:
        max-file: 2
        max-size: 5m
    networks:
      app-net:
        ipv4_address: ${NEXTCLOUD_DB_IP}
    restart: unless-stopped
    stop_grace_period: 30s
    volumes:
      # Permissions for this folder:
      - ./db-persistence:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro

  redis:
    command: redis-server --requirepass ${NEXTCLOUD_REDIS_PASSWORD}
    container_name: nextcloud-redis
    healthcheck:
      test: ["CMD-SHELL", "redis-cli --raw INCR PING"]
      interval: 20s
      timeout: 15s
      retries: 3
      start_period: 60s
      start_interval: 5s
    hostname: nextcloud-redis
    image: ${DEFAULT_REDIS_IMAGE}
    logging:
      driver: json-file
      options:
        max-file: 2
        max-size: 2m
    networks:
      app-net:
        ipv4_address: ${NEXTCLOUD_REDIS_IP}
    restart: unless-stopped
    stop_grace_period: 30s

  cron:
    container_name: nextcloud-cron
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    entrypoint: /cron.sh
    hostname: nextcloud-cron
    image: ${NEXTCLOUD_IMAGE}
    logging:
      driver: json-file
      options:
        max-file: 2
        max-size: 2m
    networks:
      app-net:
        ipv4_address: ${NEXTCLOUD_CRON_IP}
    restart: unless-stopped
    stop_grace_period: 30s
    volumes:
      - ./persistence:/var/www/html

  app:
    container_name: nextcloud
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file: config/.env
    hostname: nextcloud
    image: ${NEXTCLOUD_IMAGE}
    logging:
      driver: json-file
      options:
        max-file: 5
        max-size: 10m
    networks:
      app-net:
        ipv4_address: ${NEXTCLOUD_INTERNAL_IP}
    restart: unless-stopped
    stop_grace_period: 30s
    volumes:
      - ./persistence:/var/www/html

  nextcloud:
    container_name: nextcloud-web
    depends_on:
      app:
        condition: service_started
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    dns:
      - 127.0.0.1
      - 45.90.28.96
      - 45.90.30.96
    hostname: nextcloud-web
    image: ${FASTCGI_SUPPORT_IMAGE}
    labels:
      - "traefik.enable=true"
      # Routers
      - "traefik.http.routers.nextcloud.entrypoints=web,websecure"
      - "traefik.http.routers.nextcloud.rule=Host(`nextcloud.${DOMAIN}`)"
      - "traefik.http.routers.nextcloud.tls=true"
      # - "traefik.http.routers.nextcloud.tls.certresolver=letsencrypt"
      # - "traefik.http.routers.nextcloud.tls.domains[0].main=nextcloud.${DOMAIN}"
      - "traefik.http.routers.nextcloud.service=nextcloud"
      # Services
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"
    links:
      - app
    logging:
      driver: json-file
      options:
        max-file: 2
        max-size: 2m
    networks:
      app-net:
        ipv4_address: ${NEXTCLOUD_WEB_IP}
      traefik-net:
        ipv4_address: ${NEXTCLOUD_IP}
    restart: unless-stopped
    stop_grace_period: 30s
    volumes:
      - ./web-persistence/Caddyfile:/etc/caddy/Caddyfile
      - ./web-persistence/data:/data
      - ./web-persistence/config:/config
    volumes_from:
      - app

networks:
  app-net:
    name: nextcloud-internal
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${NEXTCLOUD_NET}
          gateway: ${NEXTCLOUD_GATEWAY}
  traefik-net:
    external: true
    name: traefik-net
