# - Instead of SQLite (default), MariaDB is used as the database server.
# - Apache Tika and Gotenberg servers are started with paperless and paperless
#   is configured to use these services. These provide support for consuming
#   Office documents (Word, Excel, Power Point and their LibreOffice counter-
#   parts.

services:
  db:
    container_name: paperless-mariadb
    env_file: config/.env.db
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -p${PAPERLESS_DB_ROOT_PASSWORD}"]
      interval: 20s
      timeout: 15s
      retries: 3
      start_period: 60s
      start_interval: 5s
    hostname: paperless-mariadb
    image: ${DEFAULT_DB_IMAGE}
    logging:
      driver: json-file
      options:
        max-file: 2
        max-size: 5m
    networks:
      app-net:
        ipv4_address: ${PAPERLESS_DB_IP}
    restart: unless-stopped
    stop_grace_period: 30s
    volumes:
      - ./db-persistence:/var/lib/mysql

  broker:
    container_name: paperless-redis
    hostname: paperless-redis
    image: ${DEFAULT_REDIS_IMAGE}
    logging:
      driver: json-file
      options:
        max-file: 2
        max-size: 2m
    networks:
      app-net:
        ipv4_address: ${PAPERLESS_REDIS_IP}
    restart: unless-stopped
    stop_grace_period: 30s
    volumes:
      - ./redis-persistence:/data

  gotenberg:
    # The gotenberg chromium route is used to convert .eml files. We do not
    # want to allow external content like tracking pixels or even javascript.
    command: gotenberg --chromium-disable-javascript=true --chromium-allow-list=file:///tmp/.*
    container_name: paperless-gotenberg
    hostname: paperless-gotenberg
    image: ${GOTENBERG_IMAGE}
    logging:
      driver: json-file
      options:
        max-file: 2
        max-size: 2m
    networks:
      app-net:
        ipv4_address: ${PAPERLESS_GOTENBERG_IP}
    restart: unless-stopped
    stop_grace_period: 30s

  tika:
    container_name: paperless-tika
    hostname: paperless-tika
    image: ${TIKA_IMAGE}
    logging:
      driver: json-file
      options:
        max-file: 2
        max-size: 2m
    networks:
      app-net:
        ipv4_address: ${PAPERLESS_TIKA_IP}
    restart: unless-stopped
    stop_grace_period: 30s

  paperless:
    # createsuperuser --noinput --username "${PAPERLESS_ADMIN_USER}" --email "${USER_EMAIL}"
    container_name: paperless
    depends_on:
      db:
        condition: service_healthy
      broker:
        condition: service_started
      gotenberg:
        condition: service_started
      tika:
        condition: service_started
    dns:
      - 127.0.0.1
      - 45.90.28.96
      - 45.90.30.96
    env_file: config/.env
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000"]
      interval: 20s
      timeout: 15s
      retries: 3
      start_period: 60s
      start_interval: 5s
    hostname: paperless
    image: ${PAPERLESS_IMAGE}
    labels:
      - "traefik.enable=true"
      # Routers
      - "traefik.http.routers.paperless.entrypoints=web,websecure"
      - "traefik.http.routers.paperless.rule=Host(`paperless.${DOMAIN}`)"
      - "traefik.http.routers.paperless.tls=true"
      # - "traefik.http.routers.paperless.tls.certresolver=letsencrypt"
      # - "traefik.http.routers.paperless.tls.domains[0].main=paperless.${DOMAIN}"
      - "traefik.http.routers.paperless.service=paperless"
      # Services
      - "traefik.http.services.paperless.loadbalancer.server.port=8000"
    logging:
      driver: json-file
      options:
        max-file: 5
        max-size: 10m
    networks:
      app-net:
        ipv4_address: ${PAPERLESS_INTERNAL_IP}
      traefik-net:
        ipv4_address: ${PAPERLESS_IP}
    ports:
      - 8000
    restart: unless-stopped
    stop_grace_period: 30s
    volumes:
      - ./persistence/consume:/usr/src/paperless/consume
      - ./persistence/data:/usr/src/paperless/data
      - ./persistence/export:/usr/src/paperless/export
      - ./persistence/media:/usr/src/paperless/media

networks:
  app-net:
    name: paperless-internal
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${PAPERLESS_NET}
          gateway: ${PAPERLESS_GATEWAY}
  traefik-net:
    external: true
    name: traefik-net
